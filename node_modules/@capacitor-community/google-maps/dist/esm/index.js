import { registerPlugin } from "@capacitor/core";
const CapacitorGoogleMaps = registerPlugin("CapacitorGoogleMaps", {
    web: () => import("./web").then((m) => new m.CapacitorGoogleMapsWeb()),
});
CapacitorGoogleMaps.addListener("didRequestElementFromPoint", (data) => {
    var _a;
    const object = {
        eventChainId: data === null || data === void 0 ? void 0 : data.eventChainId,
        mapId: null,
        isSameNode: false,
    };
    const { x, y } = (data === null || data === void 0 ? void 0 : data.point) || {};
    if (x && y) {
        const element = document.elementFromPoint(x, y);
        const mapId = (_a = element === null || element === void 0 ? void 0 : element.getAttribute) === null || _a === void 0 ? void 0 : _a.call(element, "data-maps-id");
        if (mapId) {
            // if (ref.isSameNode(element)) {
            //   object.isSameNode = true;
            // }
            object.mapId = mapId;
            object.isSameNode = true;
        }
    }
    CapacitorGoogleMaps.elementFromPointResult(object);
});
export * from "./definitions";
export { CapacitorGoogleMaps };
//# sourceMappingURL=index.js.map